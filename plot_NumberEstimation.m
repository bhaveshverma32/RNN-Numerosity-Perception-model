%% To plot number estimation as a function of set size and mean activation (NumberEstimation.eps)

%%


%result_analy2()
% RE = load('relative_error_closer.mat');
RE = load('relative_error_line_monotonus.mat');
% RE = load('relative_error_monotonus_all_t50.mat');
RE = load('relative_error_monotonus_Pre_calc.mat');


RE = RE.relative_error;

relative_error = RE; 
% hold on
% plot(relative_error(:,1,1),relative_error(:,1,3))
% plot(relative_error(:,4,1),relative_error(:,4,3))
% plot(relative_error(:,15,1),relative_error(:,15,3))
% % plot(relative_error(:,15,1),choice(:,2))  %%%%%%%%%%%
% caption = sprintf('setsize vs prediction .._closer.mat');
% title(caption, 'FontSize', 12);
% legend('\beta =.01','\beta =.04','\beta =.15');
% xlabel('setsize');
% ylabel('output number');
%%
jumppoints=[relative_error(1:4,15,3);relative_error(5:10,4,3);relative_error(11:18,1,3)];

myfit = fittype('a*x + b*x^2 + c*x^3 + d',...
'dependent',{'y'},'independent',{'x'},...
'coefficients',{'a','b','c','d'});
fit1=fit(relative_error(:,1,1),relative_error(:,1,3),'smoothingspline');
fit4=fit(relative_error(:,4,1),relative_error(:,4,3),'smoothingspline');
fit15=fit(relative_error(:,15,1),relative_error(:,15,3),'smoothingspline');
fitjump=fit(relative_error(:,15,1),jumppoints,'smoothingspline');
%%

figure('Units', 'pixels', ...
'Position', [100 100 500 375]);
hold on;
line1=line(relative_error(:,1,1),relative_error(:,1,3));
line4=line(relative_error(:,4,1),relative_error(:,4,3));
line15=line(relative_error(:,15,1),relative_error(:,15,3));
linejump = line(relative_error(:,15,1),jumppoints) ;

xx = linspace(1,50,150);
linefit1=line(xx,fit1(xx));
linefit4=line(xx,fit4(xx));
linefit15=line(xx,fit15(xx));
linefitjump=line(xx,fitjump(xx));

set(linefit1                        , ...
  'LineStyle'       , '--'        , ...
  'Color'           , [.75 .5 .5 ]         );
set(linefit4                        , ...
  'LineStyle'       , '--'        , ...
  'Color'           , [.5  .75 .5]         );
set(linefit15                        , ...
  'LineStyle'       , '--'        , ...
  'Color'           , [.5 .5 .75]         );
set(linefitjump                        , ...
  'LineStyle'       , '-.'        , ...
  'Color'           , [0 0 0]         );
set(line1                            , ...
  'LineStyle'       , 'none'      , ...
  'Marker'          , '.'         ,...
  'Marker'          , 'o'         , ...
  'MarkerSize'      , 4           , ...
  'MarkerEdgeColor' , 'none'      , ...
  'MarkerFaceColor' , [1 0 0] );
set(line4                            , ...
  'LineStyle'       , 'none'      , ...
  'Marker'          , '.'         ,...
  'Marker'          , 'o'         , ...
  'MarkerSize'      , 4           , ...
  'MarkerEdgeColor' , 'none'      , ...
  'MarkerFaceColor' , [0 1 0] );
set(line15                            , ...
  'LineStyle'       , 'none'      , ...
  'Marker'          , 'o'         ,...
  'MarkerSize'      , 4           , ...
  'MarkerEdgeColor' , 'none'      , ...
  'MarkerFaceColor' , [0 0 1] );
set(linejump                   , ...
  'LineStyle'       , 'none'      , ...
  'Marker'          , 'o'         ,...
  'MarkerSize'      , 6           , ...
  'MarkerEdgeColor' , 'bl'      , ...
  'MarkerFaceColor' , 'none' );


% hTitle  = title ('');
hXLabel = xlabel('SetSize(input Numerosity)'                     );
hYLabel = ylabel('Number Estimation'                      );

c=0.0995;
C=0.1;
hText   = text(10, 800, ...
  sprintf('htext....'));

hLegend = legend( ...
  [line1, line4, line15], ...
  '\beta = 0.01' , ...
  '\beta = 0.04'  , ...
  '\beta = 0.15'  , ...
  'location', 'Northwest' );
%
set( gca                       , ...
    'FontName'   , 'Helvetica' );
% set([hTitle,hXLabel, hYLabel, hText], ...
set([hXLabel, hYLabel, hText], ...
     'FontName'   , 'AvantGarde');
set([hLegend, gca]             , ...
    'FontSize'   , 8           );
set([hXLabel, hYLabel, hText]  , ...
    'FontSize'   , 10          );
% set( hTitle                    , ...
%     'FontSize'   , 12          , ...
%     'FontWeight' , 'bold'      );

set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'off'      , ...
  'YMinorTick'  , 'off'      , ...
  'YGrid'       , 'on'      , ...
  'XGrid'       , 'on'      , ...
  'XColor'      , [.3 .3 .3], ...
  'YColor'      , [.3 .3 .3], ...
  'YTick'       , [1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 45 50], ...
  'XTick'       , [1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 45 50], ...
  'LineWidth'   , 1         );

set(gcf, 'PaperPositionMode', 'auto');
print -depsc2 NumberEstimation.eps

% fixPSlinestyle('finalPlot1.eps', 'finalPlot2.eps');
